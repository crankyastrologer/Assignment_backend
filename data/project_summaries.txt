
### Project: LLM From Scratch

**Summary:**
This project involves designing and training a Large Language Model (LLM) from scratch, inspired by the "Attention is All You Need" paper and GPT architecture. The model is trained using the open webtext corpus. The primary goal is to demonstrate the ability to create, train, and deploy a chatbot.

**Tech Stack:**
- **Pytorch DirectML:** Utilized for leveraging AMD GPU for accelerated training.
- **Tqdm:** Used for displaying progress bars.
- **Concurrent.futures:** Employed to speed up data preprocessing.

**Keywords:**
Machine Learning, NLP, GPT, Chatbot, Deep Learning, Model Training, Python, Pytorch, Data Processing, AI Development

---

### Project: Market Web App

**Summary:**
This is a Flask-based web application, my first project using the Flask framework. It was created with the help of a tutorial on freeCodeCamp.

**Keywords:**
Web Development, Flask, Python, Backend Development, Learning Project

---

### Project: News App

**Summary:**
A news application created using Flask and Svelte that categorizes and provides local news to users. The app leverages NLP techniques to ensure news is relevant to the user's location.

**Tech Stack:**
- **Flask:** Backend framework.
- **Svelte:** Frontend framework.
- **NLP Techniques:** For categorizing news based on location.

**Keywords:**
Web Development, Flask, Svelte, Natural Language Processing, Python, Frontend Development, Backend Development, Local News Application

---

### Project: News App 2

**Summary:**
A secondary version of the news application, focusing on providing localized news using advanced NLP techniques.

**Tech Stack:**
- **Flask:** Backend framework.
- **Svelte:** Frontend framework.
- **NLP Techniques:** For categorizing news based on location.

**Keywords:**
Web Development, Flask, Svelte, Natural Language Processing, Python, Frontend Development, Backend Development, Local News Application

---

### Project: Portfolio

**Summary:**
A personal portfolio website designed to showcase my work. It utilizes a modern tech stack to ensure performance and maintainability, featuring a CMS for content management and Tailwind CSS for styling.

**Tech Stack:**
- **Svelte + TypeScript:** Framework for building the frontend.
- **Hygraph + GraphQL:** Content Management System.
- **Tailwind CSS + Flowbit-Svelte:** Styling.
- **UploadThing:** Content Delivery Network.
- **Vercel:** Deployment platform.

**Keywords:**
Web Development, Portfolio, Svelte, TypeScript, CMS, GraphQL, Tailwind CSS, Vercel, Frontend Development, Personal Branding

---

### Project: Spaceship Titanic

**Summary:**
A Kaggle project focusing on creating a model for the Spaceship Titanic competition. The project involves data preprocessing, feature engineering, and model training to predict outcomes.

**Keywords:**
Data Science, Kaggle, Machine Learning, Model Training, Python, Data Analysis, Feature Engineering, Predictive Modeling

---

### Project: Specific Face Detection

**Summary:**
A face detection model that can be trained to detect specific faces. Users can add images of their faces, and the model will be trained to recognize only those faces.

**Keywords:**
Computer Vision, Face Detection, Machine Learning, Python, Custom Model Training, Image Processing, AI, Deep Learning

---

### Project: ToDo App

**Summary:**
A basic ToDo application created using Kivy during the early stages of development. The app allows users to create and manage tasks effectively.

**Tech Stack:**
- **Python:** Primary programming language.
- **Kivy:** Framework for building the GUI application.

**Keywords:**
Mobile Development, Python, Kivy, ToDo Application, Task Management, GUI Development, Early Career Project
